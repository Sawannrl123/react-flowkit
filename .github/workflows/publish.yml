name: Publish Package

on:
  push:
    branches:
      - main

# Add permissions block here to enable release creation
permissions:
  contents: write
  packages: read

jobs:
  version-check:
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.check.outputs.version_changed }}
      package_version: ${{ steps.check.outputs.package_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: "https://registry.npmjs.org"

      - name: Check version changes
        id: check
        run: |
          # Get the current version from package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current package version: $CURRENT_VERSION"

          # Set outputs
          echo "package_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

          # Check if this is the first release
          if [[ $(npm view react-flowkit versions 2>/dev/null | wc -l) -eq 0 ]]; then
            echo "First package release detected"
            echo "version_changed=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Get the latest published version
          PUBLISHED_VERSION=$(npm view react-flowkit version)
          echo "Latest published version: $PUBLISHED_VERSION"

          # Compare versions
          if [ "$CURRENT_VERSION" != "$PUBLISHED_VERSION" ]; then
            echo "Version has been updated: $PUBLISHED_VERSION â†’ $CURRENT_VERSION"
            echo "version_changed=true" >> $GITHUB_OUTPUT
          else
            echo "Version has not been updated from $PUBLISHED_VERSION"
            echo "version_changed=false" >> $GITHUB_OUTPUT
            exit 1
          fi

  publish:
    needs: version-check
    if: ${{ needs.version-check.outputs.version_changed == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm ci || npm install

      - name: Build package
        run: npm run build

      - name: Publish package
        run: |
          # Remove private flag for publishing
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.version-check.outputs.package_version }}
          release_name: Release v${{ needs.version-check.outputs.package_version }}
          draft: false
          prerelease: false
